{"version":3,"sources":["Role.js","TimelineRole.js","Technology.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","jobCard","textAlign","position","minHeight","display","justifyContent","flexDirection","jobCardSlim","padding","expand","bottom","right","border","Role","props","classes","React","useState","expanded","setExpanded","Card","className","company","content","CardContent","Typography","variant","title","Hidden","mdUp","Collapse","in","collapsedHeight","Button","onClick","smDown","theme","gutter","flex","opposite","color","width","alignItems","TimelineRole","TimelineItem","TimelineOppositeContent","year","TimelineSeparator","Tooltip","TimelineDot","icon","last","TimelineConnector","TimelineContent","children","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","text","secondary","panel","margin","Technology","ExpansionPanel","id","onChange","event","isExpanded","ExpansionPanelSummary","expandIcon","aria-controls","header","sub","ExpansionPanelDetails","root","drawer","breakpoints","up","appBar","marginLeft","menuButton","marginRight","spacing","visibility","toolbar","mixins","drawerPaper","backgroundColor","opacity","printButton","flexGrow","page","paddingTop","lastPage","simplePage","introText","fontFamily","techText","maxWidth","card","menuItem","App","useTheme","mobileOpen","setMobileOpen","intro","useRef","employment","tech","qualifications","interests","scrollTo","ref","current","window","left","top","offsetTop","behavior","handleDrawerToggle","List","ListItem","button","key","ListItemIcon","htmlColor","ListItemText","primary","container","undefined","document","body","AppBar","Toolbar","IconButton","edge","aria-label","aria-haspopup","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","GridList","cols","cellHeight","GridListTile","GridListTileBar","titlePosition","Paper","Timeline","Table","TableBody","TableRow","TableCell","Link","href","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0de0ea59.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Card, CardContent, Collapse, Hidden, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\n\nconst useStyles = makeStyles(() => ({\n    jobCard: {\n        textAlign: 'center',\n        position: 'relative',\n        minHeight: '64px',\n        display: 'flex',\n        justifyContent:'center',\n        flexDirection: 'column'\n    },\n    jobCardSlim: {\n        \"&:last-child\": {\n            padding: '8px'\n        },\n    },\n    expand: {\n        position: 'absolute',\n        bottom: '-5px',\n        right: '-5px',\n        border: '0px'\n    }\n}));\n\nfunction Role(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n\n    return (\n        <Card className={classes.jobCard}>\n            {props.company && props.content ?\n                <CardContent>\n                    <Typography variant=\"h6\">{props.title}</Typography>\n                    <Typography variant=\"subtitle2\">@ {props.company}</Typography>\n                    <Hidden mdUp>\n                    <Collapse in={expanded} collapsedHeight='35px'>\n                        {props.content}\n                    </Collapse>\n                    <Button className={classes.expand} onClick={() => { setExpanded(!expanded) }}>\n                        {expanded ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n                    </Button>\n                    </Hidden>\n                    <Hidden smDown>\n                        {props.content}\n                    </Hidden>\n                </CardContent>\n                :\n                <CardContent className={classes.jobCardSlim}>\n                    <Typography variant=\"subtitle2\">{props.title}</Typography>\n                </CardContent>\n            }\n        </Card>\n    );\n}\n\nexport default Role;","import React from 'react';\nimport { Hidden, Tooltip, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TimelineOppositeContent, TimelineItem, TimelineSeparator, TimelineContent, TimelineDot, TimelineConnector } from '@material-ui/lab';\nimport Role from './Role.js';\n\nconst useStyles = makeStyles((theme) => ({\n    gutter: {\n        flex: 1\n    },\n    opposite: {\n        color: 'white',\n        width: '100%',\n        alignItems: 'center',\n    }\n}));\n\nfunction TimelineRole(props) {\n    const classes = useStyles();\n    return (\n        <TimelineItem>\n            <Hidden smDown>\n                <div className={classes.gutter}/>\n            </Hidden>\n            <TimelineOppositeContent className={classes.opposite}>\n                <Typography variant=\"h6\">{props.year}</Typography>\n            </TimelineOppositeContent>\n            <TimelineSeparator>\n                <Tooltip title={props.company} >\n                <TimelineDot>\n                    {props.icon}\n                </TimelineDot>\n                </Tooltip>\n                { props.last ? '' : <TimelineConnector /> }\n            </TimelineSeparator>\n            <TimelineContent>\n                <Role company={props.company} title={props.title} content={props.children} />\n            </TimelineContent>\n            <Hidden smDown>\n                <div className={classes.gutter}/>\n            </Hidden>\n        </TimelineItem>\n    )\n}\n\nexport default TimelineRole;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary, Typography } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles((theme) => ({\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n      },\n      secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n      },\n      panel: {\n        \"&.Mui-expanded\": {\n          margin: '0 5%',\n        },\n        margin: '0 5%'\n      }\n}));\n\nfunction Technology(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n      };\n\n    return (\n      <ExpansionPanel expanded={expanded === props.id} onChange={handleChange(props.id)} className={classes.panel}>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} aria-controls={props.id + \"bh-content\"} id={props.id + \"bh-header\"} >\n          <Typography className={classes.heading}>{props.header}</Typography>\n          <Typography className={classes.secondaryHeading}>{props.sub}</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n            {props.children}\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    );\n}\n\nexport default Technology;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport './App.css';\nimport { AppBar, Drawer, IconButton, Hidden, Toolbar, Typography, List, ListItem, ListItemIcon, ListItemText, Table, TableRow, TableBody, TableCell } from '@material-ui/core';\nimport { Card, GridList, GridListTile, Paper, GridListTileBar, Link } from '@material-ui/core';\nimport CloudQueueIcon from '@material-ui/icons/CloudQueue';\nimport DirectionsBikeIcon from '@material-ui/icons/DirectionsBike';\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\nimport FolderSharedIcon from '@material-ui/icons/FolderShared';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport HistoryIcon from '@material-ui/icons/History';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport LocalLibraryIcon from '@material-ui/icons/LocalLibrary';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport MapIcon from '@material-ui/icons/Map';\nimport PhonelinkSetupIcon from '@material-ui/icons/PhonelinkSetup';\nimport PrintIcon from '@material-ui/icons/Print';\nimport SchoolIcon from '@material-ui/icons/School';\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\nimport WorkOutlineIcon from '@material-ui/icons/WorkOutline';\nimport { Timeline } from '@material-ui/lab';\nimport TimelineRole from './TimelineRole';\nimport Technology from './Technology'\n\nconst drawerWidth = 200;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('md')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('md')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('md')]: {\n      visibility: 'hidden',\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: '#252526',\n    opacity: '0.8',\n  },\n  printButton: {\n    marginLeft: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  page: {\n    margin: '5px',\n    minHeight: '60vh',\n    paddingTop: '48px',\n    backgroundColor: 'transparent',\n  },\n  lastPage: {\n    margin: '5px',\n    minHeight: '100vh',\n    paddingTop: '48px',\n    backgroundColor: 'transparent',\n  },\n  simplePage: {\n    margin: '5px',\n    minHeight: '60vh',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    color: 'white',\n    backgroundColor: '#1e1e1e',\n    opacity: '0.7',\n  },\n  introText: {\n    fontFamily: \"Source Code Pro\",\n    padding: '16px',\n  },\n  techText: {\n    textAlign: 'justify',\n    padding: '8px',\n  },\n  content: {\n    flexGrow: 1,\n    maxWidth: '1268px',\n    margin: 'auto'\n  },\n  card: {\n    padding: '16px',\n    margin: '16px 5%',\n  },\n  menuItem: {\n    \"&:hover\": {\n      backgroundColor: '#333333'\n    },\n    backgroundColor: '#252526',\n    color: 'white'\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const intro = React.useRef(null);\n  const employment = React.useRef(null);\n  const tech = React.useRef(null);\n  const qualifications = React.useRef(null);\n  const interests = React.useRef(null);\n\n  const scrollTo = (ref) => {\n    if (ref && ref.current) {\n      window.scrollTo({ left: 0, top: ref.current.offsetTop - 64, behavior: 'smooth' });\n    }\n    setMobileOpen(false);\n  };\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <List>\n        <ListItem button key='Intro' onClick={() => scrollTo(intro)} className={classes.menuItem}>\n          <ListItemIcon><EmojiPeopleIcon htmlColor='white' /></ListItemIcon>\n          <ListItemText primary='Introduction' />\n        </ListItem>\n        <ListItem button key='Employment' onClick={() => scrollTo(employment)} className={classes.menuItem}>\n          <ListItemIcon><HistoryIcon htmlColor='white' /></ListItemIcon>\n          <ListItemText primary='Employment' />\n        </ListItem>\n        <ListItem button key='Experience' onClick={() => scrollTo(tech)} className={classes.menuItem}>\n          <ListItemIcon><FolderSharedIcon htmlColor='white' /></ListItemIcon>\n          <ListItemText primary='Experience' />\n        </ListItem>\n        <ListItem button key='Education' onClick={() => scrollTo(qualifications)} className={classes.menuItem}>\n          <ListItemIcon><SchoolIcon htmlColor='white' /></ListItemIcon>\n          <ListItemText primary='Education' />\n        </ListItem>\n        <ListItem button key='Enjoyment' onClick={() => scrollTo(interests)} className={classes.menuItem}>\n          <ListItemIcon><InsertEmoticonIcon htmlColor='white' /></ListItemIcon>\n          <ListItemText primary='Enjoyment' />\n        </ListItem>\n      </List>\n    </div>\n  );\n\n  const container = window !== undefined ? () => window.document.body : undefined;\n\n  return (\n    <div className=\"App\">\n      <AppBar position=\"sticky\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleDrawerToggle}>\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h5\" className={classes.title}>Tim Mullender</Typography>\n          <IconButton edge=\"end\" className={classes.printButton} color=\"inherit\" aria-label=\"print\">\n            <PrintIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.root} >\n        <nav className={classes.drawer} aria-label=\"mailbox folders\">\n          <Hidden mdUp implementation=\"css\">\n            <Drawer\n              container={container}\n              variant=\"temporary\"\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n              open={mobileOpen}\n              onClose={handleDrawerToggle}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              ModalProps={{\n                keepMounted: true,\n              }}\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n          <Hidden smDown implementation=\"css\">\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>\n        <main className={classes.content}>\n          <GridList cols={1} cellHeight='auto'>\n            <GridListTile key='Introduction' ref={intro}>\n              <GridListTileBar title=\"Introduction\" titlePosition=\"top\" />\n              <Paper className={classes.simplePage}>\n                <Typography className={classes.introText} variant='h3'>I'm a quick learner</Typography>\n                <Typography className={classes.introText} variant='h3'>I enjoy a challenge</Typography>\n                <Typography className={classes.introText} variant='h3'>and I like to improve things</Typography>\n              </Paper>\n            </GridListTile>\n            <GridListTile key='Employment' ref={employment}>\n              <GridListTileBar title=\"Employment\" titlePosition=\"top\" />\n              <Paper className={classes.page}>\n                <Timeline>\n                  <TimelineRole year='2018' company='WANdisco' title='Senior Software Engineer' icon={<CloudQueueIcon htmlColor='black' />}>\n                    <Typography>I am part of a team that was initially working on the core Fusion product, a distributed Java application with an Angular frontend targeted at the Hadoop ecosystem.\n                    We moved on to work on the Multicloud product, proxying and co-ordinating HTTP requests to Azure and AWS storage APIs before becoming\n                    the Live Data Platform team working to integrate Fusion into the Microsoft Azure ecosystem.</Typography>\n                  </TimelineRole>\n                  <TimelineRole year='2016' company=\"CME Group\" title=\"Lead Software Engineer\" icon={<LanguageIcon htmlColor='blue' />}>\n                    <Typography>I led a small Agile team involved in feature development for low latency Java applications at the heart of the trading platform.\n                    I was involved in all stages of the software development lifecycle, from planning and design, through implementation and testing, to deployment and maintenance.\n                    I was also responsible for the management of the team, recruiting, developing and reviewing team members and reporting to the appropriate directors.</Typography>\n                  </TimelineRole>\n                  <TimelineRole year='2014' company=\"CME Group\" title=\"Senior Software Engineer\" icon={<LanguageIcon />} />\n                  <TimelineRole year='2013' company=\"CME Group\" title=\"Software Engineer III\" icon={<LanguageIcon />} />\n                  <TimelineRole year='2012' company=\"Kana\" title=\"Software Developer\" icon={<MapIcon htmlColor='red' />}>\n                    <Typography>I was working with the Product Manager to lead a team of 6-­10 engineers in producing a new web based self service product using Java and XSLT.\n                  Reporting to the VP of Development and Head of Project Delivery, I was responsible for estimation, scheduling, design, implementation, and testing of features within the product</Typography>\n                  </TimelineRole>\n                  <TimelineRole year='2011' company=\"Mformation\" title=\"Senior Software Engineer\" icon={<PhonelinkSetupIcon htmlColor='orange' />}>\n                    <Typography>I was working in an Agile development framework, reporting to the project managers.\n                  I was responsible for 2­-3 back end components of a Java web app, from the requirement capture to the design, implementation and automated testing of the components working with various technologies including Spring and Hibernate.</Typography>\n                  </TimelineRole>\n                  <TimelineRole year='2008' company=\"Mformation\" title=\"Software Engineer\" icon={<PhonelinkSetupIcon />} />\n                  <TimelineRole year='2006' company=\"Mformation\" title=\"Device Test Engineer\" icon={<PhonelinkSetupIcon />} />\n                  <TimelineRole year='2004' company=\"Cuxton Community Trust\" title=\"Youth Worker\" icon={<SupervisedUserCircleIcon htmlColor='black' />} last='true'>\n                    <Typography>I was working with the Trust to provide services to the young people in Cuxton, from a place to meet, people to chat to, opportunities to learn and ways to give back</Typography>\n                  </TimelineRole>\n                </Timeline>\n              </Paper>\n            </GridListTile>\n            <GridListTile key='Experience' ref={tech}>\n              <GridListTileBar title=\"Experience\" titlePosition=\"top\" />\n              <Paper className={classes.page}>\n                <Technology id='languages' header='Languages' sub='Java, Python, HTML, SQL, Bash, JavaScript, Clojure, XML, Groovy, Go, Vala' >\n                  <div>\n                    <Typography className={classes.techText}>I have over 15 years experience in Java and in that time I've seen most aspects of the SDK and JVM,\n                    from the days of EJBs at Mformation to the performance tuning at CME using tools like JMH,\n                    to NIO and Futures at WANdisco and most other things in between</Typography>\n                    <Typography className={classes.techText}>As Bash started to have it's limitations, Python became my scripting language of choice, with the wide\n                    range of packages available it's simple to get most things done in a short space of time.  WANdisco is the first place where I've\n                    been involved in builing and distributing python packages as part of the Azure command line client, learning more of the Python ecosystem.\n                    </Typography>\n                    <Typography className={classes.techText}>I've had a mixed experience with JavaScript, from small fixes in web front ends, to adding features to Ciboodle at Kana and\n                    writing internal apps in Electron and Node.js at CME and at home</Typography>\n                    <Typography className={classes.techText}>I love exploring new languages, I started learning Clojure because I wanted a JVM based language that would force me to learn\n                    a more functional approach to writing code and I grew to like it.  I found Go when I was looking for an easier way to cross compile code\n                    for the Raspberry Pi and with the recent lockdown, I've started playing with elementary and the Vala language that it is mostly written in.\n                    </Typography>\n                  </div>\n                </Technology>\n                <Technology id='databases' header='Databases' sub='Oracle, H2, MySQL, SQLite, Cosmos DB, MongoDB, Flyway' >\n                  <Typography className={classes.techText}>Mformation, Kana and CME all used traditional relational database products, so I have a few years experience of writing SQL \n                    and doing basic database management, including creating, updating and rolling back schemas with Flyway.  My time at CME and WANdisco has also given me some experience with document-based databases</Typography>\n                </Technology>\n                <Technology id='builds' header='Build Tools' sub='Maven, Gradle, npm, Leiningen' >\n                  <Typography className={classes.techText}>I've been using Maven for almost as long as I've been using Java and have got to know it reasonably well. While at CME, I even provided training on it for other developers and wrote my own plugin\n                  when we wanted to simplify our pom files.  WANdisco has given me the opportunity to expand my use of Gradle and I now have a fairly good understanding of it along with npm for node.js and front end projects.</Typography>\n                </Technology>\n                <Technology id='frameworks' header='Frameworks' sub='Spring, React, Node.js, Angular' >\n                  <Typography className={classes.techText}>Mformation used Spring quite extensively for dependency injection and JDBC integration, since then I've used Spring Boot a few times for spinning applications up quickly.  \n                  I've used Node.js primarily in creating Electron apps, it's a great framework for being able to create cross platform apps in one language.  Wandisco is in the process of transitioning from an Angular front end to use React, \n                  so I've spent a bit of time learning both and using React in a few home projects.</Typography>\n                </Technology>\n                <Technology id='platforms' header='Platforms' sub='Ansible, Docker, Jenkins, Bamboo, Jetty, Tomcat' >\n                  <Typography className={classes.techText}>I came across Ansible when I was asked to look into automation tools at CME.  We ended up using it extensively for automating deployments, locally and in AWS and I've continued to use it since due to the ease of running playbooks in a distributed fashion.  Wandisco has given me more chance to play with docker, and we're now using it to facilitate deployments both internally and for customers</Typography>\n                </Technology>\n                <Technology id='clouds' header='Cloud Providers' sub='Microsoft Azure, Amazon Web Services, Google Cloud Platform, Heroku' >\n                  <Typography className={classes.techText}>Integrating the WANdisco Fusion product into the Mircosoft Azure ecosystem involved an in depth introduction to Azure Resource Managers, working with Virtual Machines, Service Buses, Storage Accounts and Application Insights among others to provide the first third party resource manager.  Before that I've worked with Amazon's S3 and Google's GCS storage APIs as part of the WANdisco Multicloud product and with AWS's EC2 and RDS to provide the test platform for CME's trading engine</Typography>\n                </Technology>\n                <Technology id='versions' header='Version Control' sub='Git, SVN, Github, Gerrit, BitBucket' >\n                  <Typography className={classes.techText}>I started off using CVS and SVN at Mformation before moving to git at Kana and CME.  Wandisco's version control products mean they are using a combination of tools internally and I've had experience with a good few of them.</Typography>\n                </Technology>\n                <Technology id='testing' header='Testing' sub='JUnit, Cucumber, Mockito, JMockit, Easymock, Jacoco' >\n                  <Typography className={classes.techText}>I place a high priority on testing.  I think an automated test that proves something works is one of the most valuable things you can create.  I was introduced to Cucumber at CME and I've grown to love it, to be able to write tests in a way that people can read and then provide glue code in multiple languages makes for a very flexible and useful test suite.</Typography>\n                </Technology>\n              </Paper>\n            </GridListTile>\n            <GridListTile key='Education' ref={qualifications}>\n              <GridListTileBar title=\"Education\" titlePosition=\"top\" />\n              <Paper className={classes.page}>\n                <Timeline>\n                  <TimelineRole year='2004' company='Loughborough University' title='Masters Degree' icon={<SchoolIcon />} >\n                    <Typography variant=\"subtitle2\" >Systems Engineering - Second Class(First Division)</Typography>\n                    <Typography>Managing and implementing complex, interdisciplinary projects through all their phases including specification, design, development and maintenance.\n                      Programming (C++ &amp; Java), Computer Systems, Computer Networks, Computer Graphics, Mathematics, Aerodynamics</Typography>\n                  </TimelineRole>\n                  <TimelineRole year='2000' company='Norwich YFC' title='Youth Worker Training' icon={<EmojiPeopleIcon />} >\n                    <Typography>I spent a year with YFC in Norwich, learning many aspects of working with young people.  From working with the homeless to providing support in nightclubs, assisting with school lessons and assemblies or providing resources to rural areas, it was a lesson in how to engage people and support them</Typography>\n                  </TimelineRole>\n                  <TimelineRole last='true' year='1999' company='Norwich School' title='A - Levels' icon={<WorkOutlineIcon />} >\n                    <Table>\n                      <TableBody>\n                        <TableRow>\n                          <TableCell>Physics</TableCell>\n                          <TableCell>A</TableCell>\n                        </TableRow>\n                        <TableRow>\n                          <TableCell>Mathematics</TableCell>\n                          <TableCell>A</TableCell>\n                        </TableRow>\n                        <TableRow>\n                          <TableCell>Further Mathematics</TableCell>\n                          <TableCell>B</TableCell>\n                        </TableRow>\n                        <TableRow>\n                          <TableCell>French</TableCell>\n                          <TableCell>C</TableCell>\n                        </TableRow>\n                      </TableBody>\n                    </Table>\n                  </TimelineRole>\n                </Timeline>\n              </Paper>\n            </GridListTile>\n            <GridListTile key='Enjoyment' ref={interests}>\n              <GridListTileBar title=\"Enjoyment\" titlePosition=\"top\" />\n              <Paper className={classes.lastPage}>\n                <Card className={classes.card}>\n                  <Typography>I enjoy tinkering with software, so there's usually a personal or open source project on the go, I find it a great way to learn, improve and explore ideas.  The Ansible Maven Project came out of a pain point while working at CME, my wife's frustrations allocating pupils to clubs prompted an Electron app to make her/my life easier, a new laptop lead to some time working on a driver to integrate with libfprint and a change of OS resulted in a small contribution to elementary/code</Typography>\n                  <Link href=\"https://github.com/tmullender\"><GitHubIcon /></Link>\n                </Card>\n                <Card className={classes.card}>\n                  <Typography>I like to stay active and a challenge is a good way for me to achieve that, so I've run multiple marathons, climbed the highest peaks in Northern Ireland, Scotland, England and Wales within three days, navigated my way from Mizen to Malin in a little over 48 hours on a bike and most recently cycled from Delhi, India to Kathmandu, Nepal, a distance of over 1200km. </Typography>\n                  <Link href=\"https://tmullender.github.io/traffick\"><DirectionsBikeIcon /></Link>\n                </Card>\n                <Card className={classes.card}> \n                  <Typography>I love to learn and try new things, so I've completed a few online courses from the likes of Lynda, Coursera and Stamford University including topics such as Algorithms, Machine Learning and Functional Programming in Scala</Typography>\n                  <LocalLibraryIcon />\n                </Card>\n              </Paper>\n            </GridListTile>\n          </GridList>\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}